type: edu
custom_name: stage2
files:
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.util.List;


    class Attach {
        String original;
        int shift;
        String output;

        public Attach(String original, int shift, String output) {
            this.original = original;
            this.shift = shift;
            this.output = output;
        }
    }

    public class EncryptDecryptTest extends StageTest<Attach> {
        public EncryptDecryptTest() {
            super(Main.class);
        }

        @Override
        public List<TestCase<Attach>> generate() {
            return List.of(
                new TestCase<Attach>()
                    .setInput("welcome to hyperskill\n5")
                    .setAttach(new Attach(
                        "welcome to hyperskill",
                        5,
                        "bjqhtrj yt mdujwxpnqq")),

                new TestCase<Attach>()
                    .setInput("treasure\n10")
                    .setAttach(new Attach(
                        "treasure",
                        10,
                        "dbokcebo"
                    )),

                new TestCase<Attach>()
                    .setInput("qdvdqvrxqwxrxwpvrxspvxiqgdiqarairpbiqqid\n12")
                    .setAttach(new Attach(
                        "qdvdqvrxqwxrxwpvrxspvxiqgdiqarairpbiqqid",
                        12,
                        "cphpchdjcijdjibhdjebhjucspucmdmudbnuccup"
                    )),

                new TestCase<Attach>()
                    .setInput("y\n10")
                    .setAttach(new Attach(
                        "y",
                        10,
                        "i"
                    ))
            );
        }

        @Override
        public CheckResult check(String reply, Attach attach) {
            String clue = attach.output;
            reply = reply.trim();
            clue = clue.trim();
            boolean isCorrect = reply.equals(clue);
            if (isCorrect) {
                return CheckResult.correct();
            }
            if (reply.length() != clue.length()) {
                return CheckResult.wrong(
                    "You should output a line with length " +
                        clue.length() + ". " + "You output a " +
                        "line with length " + reply.length()
                );
            }
            for (int i = 0; i < clue.length(); i++) {
                if (reply.charAt(i) != clue.charAt(i)) {
                    return CheckResult.wrong(
                        "Your " + (i+1) + "-th character '" + reply.charAt(i) + "'" +
                            " is incorrect. \n" +
                        "The right one is '" + clue.charAt(i) + "'. \n" +
                            "Key is " + attach.shift
                    );
                }
            }
            return CheckResult.correct();
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Main.java
  visible: true
  text: "package encryptdecrypt;\n\nimport java.util.Arrays;\nimport java.util.Collections;\n\
    \npublic class Main {\n    public static void main(String[] args) {\n        Encrypt\
    \ encrypt = new Encrypt(\"we found a treasure!\");\n        encrypt.reverse();\n\
    \        System.out.println(encrypt.toString());\n    }\n}\n\nclass Encrypt {\n\
    \    private char[] sentence;\n    private static String alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\n    public Encrypt(String sentence) {\n        this.sentence = sentence.toCharArray();\n\
    \    }\n\n    public void reverse() {\n        for (int i = 0; i < this.sentence.length;\
    \ i++) {\n            if ((int)this.sentence[i] > 96 && (int)this.sentence[i]\
    \ < 123)\n                this.sentence[i] = letterToReverse(this.sentence[i]);\n\
    \        }\n    }\n\n    private char letterToReverse(char ch) {\n        StringBuilder\
    \ reversedAlphabet = new StringBuilder();\n        for (int i = alphabet.length()\
    \ - 1; i > 0; i--) {\n            reversedAlphabet.append(alphabet.charAt(i));\n\
    \        }\n        return reversedAlphabet.charAt((int)ch - 97);\n    }\n\n \
    \   private void shift(int key) {\n        for (int i = 0; i < this.sentence;\
    \ i++) {\n            \n        }\n    }\n\n    @Override\n    public String toString()\
    \ {\n        StringBuilder s = new StringBuilder();\n\n        for (char ch :\
    \ sentence) {\n            s.append(ch);\n        }\n\n        return s.toString();\n\
    \    }\n}\n"
  learner_created: true
feedback_link: https://hyperskill.org/projects/46/stages/246/implement
status: Solved
record: 2
